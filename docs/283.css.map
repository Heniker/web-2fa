{"version":3,"file":"283.css","mappings":"AAAA;EACE,0BAA0B;AAC5B;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,8BAA8B;EAC9B,gBAAgB;AAClB;AACA;;EAEE,2CAA2C;AAC7C;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,YAAY;EACZ,WAAW;EACX,eAAe;AACjB;AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;EAClB,kCAAkC;EAClC,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,WAAW;EACX,oBAAoB;EACpB,wDAAwD;EACxD,yOAAyO;AAC3O;AACA;EACE,uOAAuO;AACzO;AACA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yCAAyC;AAC3C;AACA;EACE,kBAAkB;EAClB,wDAAwD;EACxD,4BAA4B;EAC5B,kBAAkB;AACpB;AACA;EACE,2BAA2B;AAC7B;AACA;EACE,qBAAqB;AACvB;AACA;EACE,sBAAsB;EACtB,gBAAgB;AAClB;AACA;EACE,WAAW;AACb,C;AC2DA;EACE,cAAc;AAChB;AAEA;AAEA","sources":["webpack:///./node_modules/vuetify/lib/components/VSwitch/VSwitch.css","webpack:///./src/routes/index/settings.vue"],"sourcesContent":[".v-switch .v-label {\n  padding-inline-start: 10px;\n}\n\n.v-switch__loader {\n  display: flex;\n}\n\n.v-switch__track,\n.v-switch__thumb {\n  background-color: currentColor;\n  transition: none;\n}\n.v-selection-control--error:not(.v-selection-control--disabled) .v-switch__track,\n.v-selection-control--error:not(.v-selection-control--disabled) .v-switch__thumb {\n  background-color: rgb(var(--v-theme-error));\n}\n\n.v-selection-control--dirty .v-switch__thumb {\n  color: currentColor;\n}\n\n.v-switch__track {\n  border-radius: 8px;\n  height: 14px;\n  opacity: 0.6;\n  width: 36px;\n  cursor: pointer;\n}\n.v-switch--inset .v-switch__track {\n  border-radius: 14px;\n  height: 28px;\n  width: 48px;\n}\n\n.v-switch__thumb {\n  align-items: center;\n  border-radius: 50%;\n  color: rgb(var(--v-theme-surface));\n  display: flex;\n  height: 20px;\n  justify-content: center;\n  width: 20px;\n  pointer-events: none;\n  transition: 0.15s transform cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 2px 4px -1px var(--v-shadow-key-umbra-opacity, rgba(0, 0, 0, 0.2)), 0px 4px 5px 0px var(--v-shadow-key-penumbra-opacity, rgba(0, 0, 0, 0.14)), 0px 1px 10px 0px var(--v-shadow-key-penumbra-opacity, rgba(0, 0, 0, 0.12));\n}\n.v-switch--inset .v-switch__thumb {\n  box-shadow: 0px 0px 0px 0px var(--v-shadow-key-umbra-opacity, rgba(0, 0, 0, 0.2)), 0px 0px 0px 0px var(--v-shadow-key-penumbra-opacity, rgba(0, 0, 0, 0.14)), 0px 0px 0px 0px var(--v-shadow-key-penumbra-opacity, rgba(0, 0, 0, 0.12));\n}\n.v-switch:not(.v-switch--loading) .v-icon ~ .v-switch__thumb {\n  display: none;\n}\n\n.v-switch--loading .v-selection-control__input > .v-icon {\n  display: none;\n}\n\n.v-switch .v-selection-control {\n  min-height: var(--v-input-control-height);\n}\n.v-switch .v-selection-control__input {\n  border-radius: 50%;\n  transition: 0.15s transform cubic-bezier(0.4, 0, 0.2, 1);\n  transform: translateX(-10px);\n  position: absolute;\n}\n.v-switch .v-selection-control--dirty .v-selection-control__input {\n  transform: translateX(10px);\n}\n.v-switch.v-switch--indeterminate .v-selection-control__input {\n  transform: scale(0.8);\n}\n.v-switch.v-switch--indeterminate .v-switch__thumb {\n  transform: scale(0.75);\n  box-shadow: none;\n}\n.v-switch.v-switch--inset .v-selection-control__wrapper {\n  width: auto;\n}","<template>\r\n  <Teleport to=\"#app-overlay-portal\">\r\n    <section :class=\"$style.scrim\" class=\"d-flex justify-center align-center\">\r\n      <v-card\r\n        v-click-outside=\"{\r\n          include: () => [...window.document.querySelectorAll('.v-select__content')],\r\n          handler: () => $router.push({ name: '' + require.resolve('@/routes/index.vue') }),\r\n        }\"\r\n        :width=\"display.smAndDown ? '90vw' : 400\"\r\n        class=\"pb-2\"\r\n      >\r\n        <v-card-title class=\"d-flex justify-center mt-3 mb-1 text-h4\">Settings</v-card-title>\r\n\r\n        <v-card-text class=\"pb-2\">\r\n          <v-form>\r\n            <v-select\r\n              v-model=\"appTheme.selected.value\"\r\n              :items=\"appTheme.options\"\r\n              class=\"mt-3\"\r\n              label=\"Theme\"\r\n              variant=\"solo-filled\"\r\n              hide-details\r\n            ></v-select>\r\n            <v-select\r\n              v-model=\"appLockTime.selected.value\"\r\n              :items=\"appLockTime.options\"\r\n              class=\"mt-3\"\r\n              label=\"Lock after\"\r\n              variant=\"solo-filled\"\r\n              hide-details\r\n            ></v-select>\r\n            <v-select\r\n              v-model=\"appProgressBar.selected.value\"\r\n              :items=\"appProgressBar.options\"\r\n              class=\"mt-3\"\r\n              label=\"Progress bar style\"\r\n              variant=\"solo-filled\"\r\n              hide-details\r\n            ></v-select>\r\n            <!-- v-model=\"s\" -->\r\n            <v-switch\r\n              v-model=\"preferLessAnimations\"\r\n              :class=\"$style.switch\"\r\n              class=\"mt-3\"\r\n              color=\"deep-purple-lighten-2\"\r\n              label=\"Prefer less animations\"\r\n              hide-details\r\n            ></v-switch>\r\n          </v-form>\r\n        </v-card-text>\r\n      </v-card>\r\n    </section>\r\n  </Teleport>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport type { TokenI, TokenAlgorithmT } from '@/_types'\r\nimport * as v from 'vue'\r\nimport { useDisplay, useTheme } from 'vuetify'\r\nimport { Otp, Settings } from '@/services'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport default v.defineComponent({\r\n  components: {},\r\n  setup(props, ctx) {\r\n    const settingsService = v.inject(Settings.token)\r\n    assert(settingsService)\r\n\r\n    const theme = useTheme()\r\n\r\n    const appLockTime = {\r\n      selected: v.toRefs(settingsService.reactive).passwordKeepAlive,\r\n      options: [\r\n        {\r\n          title: 'Instant',\r\n          value: 0,\r\n        },\r\n        {\r\n          title: '1 minute',\r\n          value: 1000 * 60,\r\n        },\r\n        {\r\n          title: '5 minutes',\r\n          value: 1000 * 60 * 5,\r\n        },\r\n        {\r\n          title: '10 minutes',\r\n          value: 1000 * 60 * 10,\r\n        },\r\n        {\r\n          title: '30 minutes',\r\n          value: 1000 * 60 * 30,\r\n        },\r\n        {\r\n          title: '1 hour',\r\n          value: 1000 * 60 * 60,\r\n        },\r\n        {\r\n          title: '12 hours',\r\n          value: 1000 * 60 * 60 * 12,\r\n        },\r\n        {\r\n          title: 'Never',\r\n          value: Infinity,\r\n        },\r\n      ],\r\n    }\r\n\r\n    const appTheme = {\r\n      selected: v.toRefs(settingsService.reactive).theme,\r\n      options: settingsService.themeValues.map((it) => ({\r\n        title: it.slice(0, 1).toUpperCase() + it.slice(1),\r\n        value: it,\r\n      })),\r\n    }\r\n\r\n    const appProgressBar = {\r\n      selected: v.toRefs(settingsService.reactive).progressBarStyle,\r\n      options: settingsService.progressBarValues.map((it) => ({\r\n        title: it.slice(0, 1).toUpperCase() + it.slice(1),\r\n        value: it,\r\n      })),\r\n    }\r\n\r\n    const preferLessAnimations = v.toRefs(settingsService.reactive).preferLessAnimations\r\n\r\n    return {\r\n      appLockTime,\r\n      appTheme,\r\n      appProgressBar,\r\n      preferLessAnimations,\r\n    }\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped></style>\r\n<style module>\r\n.switch :global(.v-switch__thumb) {\r\n  color: #7844d3;\r\n}\r\n\r\n.scrim {\r\n  composes: scrim from './style.module.css';\r\n}\r\n</style>\r\n"],"names":[],"sourceRoot":""}